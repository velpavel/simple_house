Концепт. Все модули представлюят из себя законченное рабочее устройство, которое дополнительно же может управляться по MQTT для продвинутой логики.
Концепция лошадь-всадник.
За доп логикиу, статистику и т.п. отвечает отдельный сервер.

В случае отказа сервера/отдельного модуля остальные модули продолжают работать.

Управление датчиком удалённо напрямую(без сервера) через некий пульт рассматривается только в тех случаях, когда это управдение - критическая функциональность устройства. Как делать пульт пока вопрос.

На текущий момент целевая архитектура.
- Модули ESP\NodeMCU.
- Сервер Raspberi PI.
- Модуль-Сервер по MQTT.
- На сервере MQTT брокер mosquitto, клиент paho-mqtt
- БД (?). В неё же пишется из MQTT.
- Flask web server. Пока берёт инфу из БД, управлет сразу в MQTT. Возможно сменить на получение инфы для асинхронного обновления по MQTT.
-Структура топиков MQTT /место/лог.единица/in or out 
Где лог.единица - датчик, модуль, режим работы и и.п.
примеры:
/coridor/motion_sensor/status
/coridor/automode/command
/coridor/light/status

Текущий статус.
-Скрипт на питоне на малинке по кнопке включает свет в большйо комнате. нет интеграции ни с чем. Добавить MQTT статус, добавить датчик движения (протестирвоать количество), добавить управление с MQTT.
-Модуль в коридое на NodeMCU управляет светом. передаёт статус модуля, режим работы, наличие движения и света по MQTT. Управляется по MQTT. Поддерживает RemoteXY. Добавить приём команд ping (проверка, что модуль онлайн) и get_all_status(высылка статуса всех лог.единиц). Добавить датчик освещённости. Сменить реле на транзисторную сборку и реализовать управление яркостью света.
Вынести логин пароль WiFi в отдельный файл чтобы добавить в git.
-Сервер. Малинка B+. 
--MQTT сервер mosquitto. Работает. Добавить авторизацию.
--SQLite бд с таблицами: справочник лог.единиц, лог MQTT, теущие (последние) статусы лог.единиц. Можно заменть на MySQL или Postgresql. Ещё подумать о структуре таблиц.
--Python скрипт с paho-mqtt - все MQTT пишет в БД.
--Python-Flask веб-сервер. Одна простая страница - выводит текущие значения лог единиц из БД. Сам сервер встроенный. Заменить сервер на uwsgi+nginx. Добавить управление модулями. Сделать страницу красивее. Добавить аутентификацию.
https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-uwsgi-and-nginx-on-ubuntu-16-04
https://the-bosha.ru/2017/01/04/zapusk-flask-prilozheniia-c-uwsgi-virtualenv-i-nginx/
--MQTT приложуха под андроид. Работает. Посмотреть как при подключении получать актуальные статусы. Посмотреть как шарить конфиги. Подумать не использовать ли её как пульт-планшет накленный на стену.